{"version":3,"file":"read-from-local-storage.effects.js","sourceRoot":"","sources":["../../../../src/reduxStore/side-effects/effects/read-from-local-storage.effects.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,MAAM,0BAA0B,CAAC;AAC/C,OAAO,EAAE,kCAAkC,EAAE,MAAM,uBAAuB,CAAC;AAC3E,OAAO,EAAE,oCAAoC,EAAE,MAAM,uBAAuB,CAAC;AAE7E,MAAM,SAAS,CAAC,CAAC,2BAA2B;IAC1C,IAAI,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC;QAC1E,MAAM,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QACpD,MAAM,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,MAAM,CAAC;QAC7D,MAAM,GAAG,CAAC,oCAAoC,CAAE,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAC,CAAC,CAAC,CAAC;IACvG,CAAC;SAAK,CAAC;QACL,MAAM,GAAG,CAAC,kCAAkC,EAAE,CAAC,CAAC;IAClD,CAAC;AACH,CAAC","sourcesContent":["import { put } from '@redux-saga/core/effects';\nimport { updateAccordingToLocalStorageError } from '../../actions/actions';\nimport { updateAccordingToLocalStorageSuccess } from '../../actions/actions';\n\nexport function* readFromLocalStorageEffects() {\n  if (localStorage.getItem('todoState') && localStorage.getItem('darkMode')) {\n    const todoState = localStorage.getItem('todoState');\n    const darkMode = localStorage.getItem('darkMode') === 'true';\n    yield put(updateAccordingToLocalStorageSuccess( {todos: JSON.parse(todoState), darkMode: darkMode}));\n  } else{\n    yield put(updateAccordingToLocalStorageError());\n  }\n}\n"]}