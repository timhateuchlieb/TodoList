{"version":3,"file":"reducer.js","sourceRoot":"","sources":["../../../src/reduxStore/reducer/reducer.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,QAAQ,EACR,WAAW,EACX,oBAAoB,EACpB,gBAAgB,EAChB,WAAW,EACX,uCAAuC,EACvC,yCAAyC,GAC1C,MAAM,wBAAwB,CAAC;AAGhC,MAAM,CAAC,MAAM,YAAY,GAAc;IACrC,KAAK,EAAE,EAAE;IACT,WAAW,EAAE,EAAE;IACf,QAAQ,EAAE,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,MAAM;CACtD,CAAC;AAEF,SAAS,WAAW,CAAC,KAAK,GAAG,YAAY,EAAE,MAAM;IAC/C,QAAQ,MAAM,CAAC,IAAI,EAAE,CAAC;QACpB,KAAK,QAAQ;YACX,uCACK,KAAK,KACR,KAAK,EAAE,CAAC,GAAG,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC,EACvC,WAAW,EAAE,EAAE,IACf;QACJ,KAAK,WAAW;YACd,uCACK,KAAK,KACR,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAC5B,IAAI,CAAC,QAAQ,KAAK,MAAM,CAAC,OAAO,CAAC,QAAQ;oBACvC,CAAC,iCAAM,IAAI,KAAE,SAAS,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,SAAS,IAC9F,CAAC,CAAC,IAAI,CACT,IACD;QACJ,KAAK,oBAAoB;YACvB,uCACK,KAAK,KACR,WAAW,EAAE,MAAM,CAAC,OAAO,IAC3B;QACJ,KAAK,gBAAgB;YACnB,uCACK,KAAK,KACR,QAAQ,EAAE,CAAC,KAAK,CAAC,QAAQ,IACzB;QACJ,KAAK,WAAW;YACd,uCACK,KAAK,KACR,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,IAC5E;QACJ,KAAK,yCAAyC;YAC5C,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC/E,uCACK,KAAK,KACR,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC,KAAK,IAC3B;QACJ,KAAK,uCAAuC;YAC1C,yBACK,YAAY,EACf;QACJ;YACE,OAAO,KAAK,CAAC;IACjB,CAAC;AACH,CAAC;AACD,eAAe,WAAW,CAAC","sourcesContent":["import {\n  ADD_TODO,\n  TOGGLE_TODO,\n  UPDATE_NEW_TASK_TEXT,\n  TOGGLE_DARK_MODE,\n  DELETE_TODO,\n  UPDATE_ACCORDING_TO_LOCAL_STORAGE_ERROR,\n  UPDATE_ACCORDING_TO_LOCAL_STORAGE_SUCCESS,\n} from '../actions/actionTypes';\nimport { TodoState } from '../store/store';\n\nexport const initialState: TodoState = {\n  todos: [],\n  newTaskText: '',\n  darkMode: localStorage.getItem('darkMode') === 'true',\n};\n\nfunction todoReducer(state = initialState, action): TodoState {\n  switch (action.type) {\n    case ADD_TODO:\n      return {\n        ...state,\n        todos: [...state.todos, action.payload],\n        newTaskText: '',\n      };\n    case TOGGLE_TODO:\n      return {\n        ...state,\n        todos: state.todos.map(todo =>\n          todo.taskText === action.payload.taskText\n            ? { ...todo, isChecked: !todo.isChecked, completedAt: !todo.isChecked ? Date.now() : undefined }\n            : todo\n        ),\n      };\n    case UPDATE_NEW_TASK_TEXT:\n      return {\n        ...state,\n        newTaskText: action.payload,\n      };\n    case TOGGLE_DARK_MODE:\n      return {\n        ...state,\n        darkMode: !state.darkMode,\n      };\n    case DELETE_TODO:\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo.taskText !== action.payload.taskText),\n      };\n    case UPDATE_ACCORDING_TO_LOCAL_STORAGE_SUCCESS: \n      document.documentElement.classList.toggle('darkMode', action.payload.darkMode);\n      return{\n        ...state,\n        todos: action.payload.todos,\n      };\n    case UPDATE_ACCORDING_TO_LOCAL_STORAGE_ERROR:\n      return {\n        ...initialState,\n      };  \n    default:\n      return state;\n  }\n}\nexport default todoReducer;\n"]}