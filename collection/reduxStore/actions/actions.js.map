{"version":3,"file":"actions.js","sourceRoot":"","sources":["../../../src/reduxStore/actions/actions.ts"],"names":[],"mappings":"AACA,OAAO,EACL,QAAQ,EACR,WAAW,EACX,iCAAiC,EACjC,gBAAgB,EAChB,WAAW,EACX,oBAAoB,EACpB,uCAAuC,EACvC,yCAAyC,GAC1C,MAAM,eAAe,CAAC;AAEvB,MAAM,CAAC,MAAM,OAAO,GAAG,CAAC,IAAU,EAAE,EAAE,CAAC,CAAC;IACtC,IAAI,EAAE,QAAQ;IACd,OAAO,EAAE,IAAI;CACd,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,IAAU,EAAE,EAAE,CAAC,CAAC;IACzC,IAAI,EAAE,WAAW;IACjB,OAAO,EAAE,IAAI;CACd,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,IAAY,EAAE,EAAE,CAAC,CAAC;IAClD,IAAI,EAAE,oBAAoB;IAC1B,OAAO,EAAE,IAAI;CACd,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,gBAAyB,EAAE,EAAE,CAAC,CAAC;IAC5D,IAAI,EAAE,gBAAgB;IACtB,OAAO,EAAE,gBAAgB;CAC1B,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,IAAU,EAAE,EAAE,CAAC,CAAC;IACzC,IAAI,EAAE,WAAW;IACjB,OAAO,EAAE,IAAI;CACd,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,6BAA6B,GAAG,GAAG,EAAE,CAAC,CAAC;IAClD,IAAI,EAAE,iCAAiC;CACxC,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,kCAAkC,GAAG,GAAG,EAAE,CAAC,CAAC;IACvD,IAAI,EAAE,uCAAuC;CAC9C,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,oCAAoC,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IAC9D,IAAI,EAAE,yCAAyC;IAC/C,OAAO,EAAE,KAAK;CACf,CAAC,CAAC","sourcesContent":["import { Task } from '../../components/TodoList/todo list/task';\nimport {\n  ADD_TODO,\n  DELETE_TODO,\n  UPDATE_ACCORDING_TO_LOCAL_STORAGE,\n  TOGGLE_DARK_MODE,\n  TOGGLE_TODO,\n  UPDATE_NEW_TASK_TEXT,\n  UPDATE_ACCORDING_TO_LOCAL_STORAGE_ERROR,\n  UPDATE_ACCORDING_TO_LOCAL_STORAGE_SUCCESS,\n} from './actionTypes';\n\nexport const addTodo = (task: Task) => ({\n  type: ADD_TODO,\n  payload: task,\n});\n\nexport const toggleTodo = (task: Task) => ({\n  type: TOGGLE_TODO,\n  payload: task,\n});\n\nexport const updateNewTaskText = (text: string) => ({\n  type: UPDATE_NEW_TASK_TEXT,\n  payload: text,\n});\n\nexport const toggleDarkMode = (newDarkModeState: boolean) => ({\n  type: TOGGLE_DARK_MODE,\n  payload: newDarkModeState,\n});\n\nexport const deleteTodo = (task: Task) => ({  //todo    never used, not implemented a delete functionality jet!\n  type: DELETE_TODO,\n  payload: task,\n});\n\nexport const updateAccordingToLocalStorage = () => ({\n  type: UPDATE_ACCORDING_TO_LOCAL_STORAGE,\n});\n\nexport const updateAccordingToLocalStorageError = () => ({\n  type: UPDATE_ACCORDING_TO_LOCAL_STORAGE_ERROR,\n});\n\nexport const updateAccordingToLocalStorageSuccess = (state) => ({\n  type: UPDATE_ACCORDING_TO_LOCAL_STORAGE_SUCCESS,\n  payload: state,\n});\n"]}